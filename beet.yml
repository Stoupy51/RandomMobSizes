
# Project identifier used for namespacing functions and tags. Should align with the namespace in the source folder.
id: "random_mob_sizes"
# Project name that will be used in messages, item lore, etc.
name: "RandomMobSizes"
# Author(s) name(s) displayed in pack.mcmeta, also used to add 'convention.debug' tag to the players of the same name(s) <-- showing additionnal displays like datapack loading
author: "Stoupy51"
# Project version in semantic versioning format: major.minor.patch (e.g., 1.0.0 or 2.84.615).
version: "1.2.3"
# Minecraft version. Determines what resources beet loads (plugins like `mecha` determine what commands to use). Defaults: Latest
minecraft: "1.21.8"

# Defines the directory that beet uses for the base path
directory: "."
# Path to a folder for beet to output. If not defined, no files will visibly output
output: "build"

# Takes a nested pack config, see PackConfig() documentation
data_pack:
    name: "datapack"
    load: ["merge/datapack"]

require:
    - "stewbeet.plugins.initialize"

# A list of strings or dicts representing "plugins".
pipeline:
    - "stewbeet.plugins.datapack.loading"
    - "user.link" # User code
    - "stewbeet.plugins.finalyze.basic_datapack_structure"
    - "stewbeet.plugins.finalyze.dependencies"
    - "stewbeet.plugins.finalyze.last_final"
    - "stewbeet.plugins.auto.headers"
    - "stewbeet.plugins.archive"
    - "stewbeet.plugins.copy_to_destination"
    - "stewbeet.plugins.compute_sha1"

# Generic dict which holds extra information usable by plugins
meta:

    # StewBeet specific configuration
    stewbeet:
        # Optional list of destination paths where generated files will be copied
        build_copy_destinations:
            # Paths to copy the datapack(s) to
            datapack: ["D:/latest_snapshot/world/datapacks"]
            # Paths to copy the resource pack(s) to
            resource_pack: ["D:/minecraft/snapshot/resourcepacks"]

